<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation=" http://www.springframework.org/schema/task
						 http://www.springframework.org/schema/task/spring-task-3.0.xsd
					     http://www.springframework.org/schema/beans 
					     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
					     http://www.springframework.org/schema/tx 
					     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
					     http://www.springframework.org/schema/context 
						 http://www.springframework.org/schema/context/spring-context-3.0.xsd
					     http://www.springframework.org/schema/aop 
					     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- <context:load-time-weaver/> -->

	<context:annotation-config />
	<context:spring-configured />
	<task:annotation-driven scheduler="qbScheduler"
		mode="proxy" />
	<task:scheduler id="qbScheduler" pool-size="10" />
	<context:component-scan base-package="com.pixshow"
		annotation-config="false"
		name-generator="com.pixshow.framework.ext.spring.ClassFullNameAnnotationBeanNameGenerator" />

	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" mode="proxy" />

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 属性文件读入 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:config/config*.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSourcePool" class="com.pixshow.framework.ddb.internal.DataSourcePool">
		<property name="initialSize" value="5" />
		<property name="maxIdle" value="10" />
		<property name="minIdle" value="5" />
		<property name="maxActive" value="50" />
		<property name="maxWait" value="60000" />
		<property name="logAbandoned" value="false" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1200" />
		<property name="timeBetweenEvictionRunsMillis" value="1800000" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<property name="testOnBorrow" value="true" />
		<property name="validationQuery" value="select 1" />
	</bean>

	<bean id="dataSource" class="com.pixshow.framework.ddb.internal.RoutingDataSource">
		<property name="dataSourcePool" ref="dataSourcePool"></property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- transaction manager by spring annotation -->
	<bean id="transactionManager"
		class="com.pixshow.framework.ext.spring.ProxyDataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- redis start -->
	<!-- 连接池配置 最大空闲数、最大连接数、最长等待时间、连接是否可用 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxActive" value="${redis.maxActive}" />
		<property name="maxWait" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	<!-- 连接配置 地址、端口 -->

	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.pass}"></property>
		<property name="database" value="${redis.default.db}"></property>
		<property name="poolConfig" ref="poolConfig" />
	</bean>
	<!-- 暴露一个redisTemplate 用作redis一系列操作 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>


	<!-- redis end -->
</beans>
